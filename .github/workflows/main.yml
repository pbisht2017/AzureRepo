name: Create Azure container registries

on:
  workflow_dispatch:

jobs:
  stage-1:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Resource Group
        run: |
          az group create \
            --name myrg \
            --location eastus

      - name: Create Azure Container Registry
        run: |
          az acr create \
            --resource-group myrg \
            --name myacr103085 \
            --sku Basic \
            --admin-enabled true

      - name: Create App Service Plan
        run: |
          az appservice plan create \
            --name myAppServicePlan103085 \
            --resource-group myrg \
            --sku B1 \
            --is-linux

      - name: Create Web App
        run: |
          az webapp create \
            --resource-group myrg \
            --plan myAppServicePlan103085 \
            --name my-app-service-103085 \
            --runtime "PYTHON:3.10" \
            --deployment-local-git

  stage-2:
    needs: stage-1
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set ACR login server
        id: acr
        run: |
          ACR_NAME="myacr103085"
          echo "ACR_LOGIN_SERVER=${ACR_NAME}.azurecr.io" >> $GITHUB_ENV

      - name: Azure CLI - Login to ACR
        run: |
          az acr login --name myacr103085

      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=${{ env.ACR_LOGIN_SERVER }}/nginx:${{ github.sha }}
          docker build -t $IMAGE_TAG .
          docker build . --file Dockerfile --tag $IMAGE_TAG
          docker push $IMAGE_TAG

  stage-3:
    runs-on: ubuntu-latest
    needs: stage-2
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure Web App to use ACR image
        run: |
          RESOURCE_GROUP="myrg"
          WEBAPP_NAME="my-app-service-103085"
          ACR_NAME="myacr103085"
          IMAGE_NAME="myacr103085.azurecr.io/nginx:${{ github.sha }}"

          az webapp config container set \
            --name $WEBAPP_NAME \
            --resource-group $RESOURCE_GROUP \
            --docker-custom-image-name $IMAGE_NAME \
            --docker-registry-server-url https://$ACR_NAME.azurecr.io

      - name: Restart Web App
        run: |
          az webapp restart \
            --name my-app-service-103085 \
            --resource-group myrg
